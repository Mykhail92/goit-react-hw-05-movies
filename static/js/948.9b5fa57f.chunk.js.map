{"version":3,"file":"static/js/948.9b5fa57f.chunk.js","mappings":"sOAEaA,E,OAAOC,GAAAA,GAAH,6J,SCwCjB,EArCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYA,IAVAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GACzBJ,EAAQI,EAASC,KAAKN,KACvB,GAGF,CAFC,MAAOO,GACPC,MAAM,GAAD,OAAID,EAAME,QAAV,WACN,CACF,GAAE,CAACZ,IAECG,EAGL,OACE,SAACL,EAAD,UACGK,EAAKU,KAAI,SAAAC,GACR,IAAMC,EAAUD,EAAME,aAAN,yCACsBF,EAAME,cAD5B,uCAGhB,OACE,2BACE,gBAAKC,IAAKF,EAASG,IAAI,GAAGC,MAAM,WAChC,iBAAKC,EAAE,MAAP,WACE,uBAAIN,EAAMO,QACV,wCAAgBP,EAAMQ,kBAJjBR,EAAMS,GAQlB,KAGN,C","sources":["components/Casts/Casts.styled.js","components/Casts/Casts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: 250px 250px 250px 250px;\n  grid-gap: 10px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { getMovieCast } from 'fetchApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List } from './Casts.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    try {\n      getMovieCast(movieId).then(response => {\n        setCast(response.data.cast);\n      });\n    } catch (error) {\n      alert(`${error.message} oooops`);\n    }\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n  return (\n    <List>\n      {cast.map(actor => {\n        const profile = actor.profile_path\n          ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n          : `https://via.placeholder.com/300x450 `;\n        return (\n          <li key={actor.id}>\n            <img src={profile} alt=\"\" width=\"250px\" />\n            <div p=\"5px\">\n              <p>{actor.name}</p>\n              <p>Character : {actor.character}</p>\n            </div>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Cast;\n"],"names":["List","styled","movieId","useParams","useState","cast","setCast","useEffect","getMovieCast","then","response","data","error","alert","message","map","actor","profile","profile_path","src","alt","width","p","name","character","id"],"sourceRoot":""}
{"version":3,"file":"static/js/623.c3f465cc.chunk.js","mappings":"gOAEaA,EAAaC,EAAAA,GAAAA,KAAH,yGAOVC,EAAcD,EAAAA,GAAAA,MAAH,iEAKXE,EAAYF,EAAAA,GAAAA,OAAH,mY,SCXTG,EAAa,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SAC3B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAa3C,OACE,UAACV,EAAD,CAAYK,SAPO,SAAAM,GACnBA,EAAEC,iBACFP,EAASI,GACTD,EAAgB,GACjB,EAGC,WACE,SAACN,EAAD,CACEW,KAAK,OACLC,MAAOL,EACPM,SAAU,SAAAJ,IAhBU,SAAAF,GAExBD,EAD6B,KAAVC,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,CAcOO,CAAkBL,EAAEM,OAAOH,MAC5B,KAEH,SAACX,EAAD,CAAWU,KAAK,SAAhB,sBAGL,E,oCCWD,EAlCe,WACb,OAAuBP,EAAAA,EAAAA,MACjBY,GADN,eACiCR,IAAI,SAErC,GAA4BS,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAASD,GAA/C,eAAOI,EAAP,KAAoBC,EAApB,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAGL,KACEK,EAAAA,EAAAA,IAAeL,GAAaM,MAAK,SAAAC,GAC/BR,EAAUQ,EAAOC,KAAKC,QACvB,GAGF,CAFC,MAAOC,GACPC,MAAMD,EAAMlB,MACb,CACF,GAAE,CAACQ,IAMJ,OACE,iCACE,SAAClB,EAAD,CAAYC,SANK,SAAAI,GACnBc,EAAed,EAChB,IAKIW,IAAU,SAACc,EAAA,EAAD,CAAcd,OAAQA,EAAQe,MAAO,CAAEC,KAAMZ,OAG7D,C","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n  gap: 10px;\n`;\n\nexport const StyledInput = styled.input`\n  padding: 5px;\n  border-radius: 10px;\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 5px;\n  width: 100px;\n  border-radius: 10px;\n  text-decoration: none;\n  background-color: #e2e2e2;\n  color: black;\n  text-align: center;\n  font-size: 20px;\n  :hover {\n    background-color: #fc7d07;\n    color: #fff;\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n      0px 2px 1px rgba(0, 0, 0, 0.2);\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { StyledBtn, StyledForm, StyledInput } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const hendleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setSearchParams('');\n  };\n\n  return (\n    <StyledForm onSubmit={hendleSubmit}>\n      <StyledInput\n        type=\"text\"\n        value={query}\n        onChange={e => {\n          updateQueryString(e.target.value);\n        }}\n      />\n      <StyledBtn type=\"submit\">Search</StyledBtn>\n    </StyledForm>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { getSearchMovie } from '../fetchApi';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const paramsQuery = searchParams.get('query');\n\n  const [movies, setMovies] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(paramsQuery);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    try {\n      getSearchMovie(searchQuery).then(search => {\n        setMovies(search.data.results);\n      });\n    } catch (error) {\n      alert(error.value);\n    }\n  }, [searchQuery]);\n\n  const onFormSubmit = query => {\n    setSearchQuery(query);\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={onFormSubmit}></SearchForm>\n      {movies && <TrendingList movies={movies} state={{ from: location }} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["StyledForm","styled","StyledInput","StyledBtn","SearchForm","onSubmit","useSearchParams","searchParams","setSearchParams","query","get","e","preventDefault","type","value","onChange","updateQueryString","target","paramsQuery","useState","movies","setMovies","searchQuery","setSearchQuery","location","useLocation","useEffect","getSearchMovie","then","search","data","results","error","alert","TrendingList","state","from"],"sourceRoot":""}
{"version":3,"file":"static/js/785.f4bb663a.chunk.js","mappings":"8LAwCA,UApCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,IAVAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAeN,GAASO,MAAK,SAAAC,GAC3BJ,EAAWI,EAASC,KAAKC,QAC1B,GAGF,CAFC,MAAOC,GACPC,MAAM,GAAD,OAAID,EAAME,QAAV,WACN,CACF,GAAE,CAACb,IAEAG,EACF,OACE,gBAAKW,SAAS,SAAd,SACsB,IAAnBX,EAAQY,QACP,wBACGZ,EAAQa,KAAI,SAAAC,GACX,OACE,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,OAGH,sEAKT,C","sources":["components/Reviews/Reviews.js"],"sourcesContent":["import { getMovieReview } from 'fetchApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    try {\n      getMovieReview(movieId).then(response => {\n        setReviews(response.data.results);\n      });\n    } catch (error) {\n      alert(`${error.message} oooops`);\n    }\n  }, [movieId]);\n\n  if (reviews) {\n    return (\n      <div maxwidth=\"1000px\">\n        {reviews.length !== 0 ? (\n          <ul>\n            {reviews.map(review => {\n              return (\n                <li key={review.id}>\n                  <h3>Author: {review.author}</h3>\n                  <p>{review.content}</p>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </div>\n    );\n  }\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReview","then","response","data","results","error","alert","message","maxwidth","length","map","review","author","content","id"],"sourceRoot":""}